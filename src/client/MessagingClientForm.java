/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import javax.crypto.SecretKey;
import messages.TextMessage;
import utility.CommonUtility;

/**
 *
 * @author shriroop
 */
public class MessagingClientForm extends javax.swing.JFrame {

    /**
     * Creates new form MessagingClientForm
     */
    private SecretKey key;
    private boolean initiator;
    private Socket socket;
    private String user;
    private String buddy;

    private MessagingClientForm() {
        initComponents();
    }

    public MessagingClientForm(Socket socket, SecretKey key, boolean initiator, String user, String buddy) {
        initComponents();
        this.key = key;
        this.initiator = initiator;
        this.socket = socket;
        this.user = user;
        this.buddy = buddy;
        this.setTitle("Messaging App - " + buddy);
        new Receive().start();
    }

    class Send extends Thread {

        private final TextMessage message;

        public Send(String message) {
            this.message = new TextMessage(message);
        }

        @Override
        public void run() {
            try {
                DataOutputStream out = new DataOutputStream(socket.getOutputStream());
                byte[] encrypt = CommonUtility.encrypt(key, message.toString());
                out.write(encrypt);
                if (message.getMessage().equalsIgnoreCase(":q!")) {
                    socket.close();
                }
            } catch (IOException ex) {
            }
        }

    }

    class Receive extends Thread {

        @Override
        public void run() {
            while (true) {
                try {
                    DataInputStream in = new DataInputStream(socket.getInputStream());
                    byte[] b = new byte[2048];
                    int sz = in.read(b);
                    String decrypt = CommonUtility.decrypt(key, b, sz);
                    TextMessage m = TextMessage.getObjectFromString(decrypt);
                    if (m.getMessage().equalsIgnoreCase(":q!")) {
                        synchronized (jTextArea1) {
                            jTextArea1.setEnabled(false);
                            jTextArea1.setBackground(Color.GRAY);
                        }
                        break;
                    }
                    synchronized (jTextArea2) {
                        jTextArea2.setText(jTextArea2.getText() + "\n" + buddy + ": " + m.getMessage());
                    }
                } catch (IOException ex) {
                }
            }
            try {
                socket.close();
            } catch (IOException ex) {
            }
        }
    }

    public void send() {
        String text;
        synchronized (jTextArea1) {
            text = jTextArea1.getText();
            jTextArea1.setText("");
        }
        synchronized (jTextArea2) {
            jTextArea2.setText(jTextArea2.getText() + "\nMe: " + text);
        }
        new Send(text).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                MessagingClientForm.this.windowClosing(evt);
            }
        });

        jTextArea1.setBackground(new java.awt.Color(255, 255, 255));
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(0, 0, 0));
        jTextArea1.setRows(5);
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextArea1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(255, 255, 255));
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        send();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void windowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowClosing
        // TODO add your handling code here:
        new Send(":q!").start();
    }//GEN-LAST:event_windowClosing

    private void jTextArea1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            send();
        }
    }//GEN-LAST:event_jTextArea1KeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables

}
